{"version":3,"sources":["components/Task.js","components/Tasks.js","components/TaskInput.js","containers/Task.list.js","containers/Task.single.js","App.js","reportWebVitals.js","index.js"],"names":["Task","props","name","to","idTask","onClick","id","axios","delete","then","console","log","Tasks","data","taskData","map","el","_id","completed","TaskInput","useState","value","Input","setInput","Check","setCheck","location","useLocation","pathname","baseURL","checkCompleted","hide","type","checked","onChange","placeholder","e","target","input","met","checkbox","pass","method","url","res","sendTask","TaskList","Data","setData","useEffect","get","tasks","TaskSingle","task","App","className","path","component","exact","SingleTask","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ff1d543.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\"\r\nimport axios from 'axios'\r\nconst baseURL = 'https://task-api-manager-bojan.herokuapp.com/api/v1/tasks/'\r\nconst Task = (props) => {\r\n    const deleteTask = (id) => {\r\n        axios.delete(baseURL + id).then(\r\nconsole.log('deleted')\r\n          )\r\n    }\r\n    return(\r\n        <h1>\r\n            {props.name}\r\n            <Link to={props.idTask} >EDIT</Link>\r\n            <button onClick={()=> {deleteTask(props.idTask)}}>DELETE</button>\r\n        </h1>\r\n    )\r\n}\r\nexport default Task ","import Task from './Task'\r\n\r\nconst Tasks = (props) => {\r\n    console.log(props.data)\r\n    const taskData = props.data\r\n    return (\r\n        <div>\r\n           { taskData.map(el => {\r\n              return <Task key={el._id} idTask={el._id} name={el.name} completed={el.completed} />\r\n           })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst TaskInput = (props) => {\r\n    const [Input, setInput] = useState(props.value)\r\n    const [Check, setCheck] = useState(props.completed)\r\n    const location = useLocation().pathname\r\n    const baseURL = `https://task-api-manager-bojan.herokuapp.com/api/v1/tasks${location}`\r\n    console.log(baseURL)\r\n\r\n    const enter = (value) => {\r\n        setInput(value)\r\n        console.log(value)\r\n    }\r\n    const sendTask = (input, met, checkbox) => {\r\n        console.log(checkbox)\r\n        var pass = {};\r\n        if (!props.hide) {\r\n            pass = {\r\n                name: input,\r\n                completed: checkbox\r\n            }\r\n        }else{\r\n            pass = {\r\n                name: input,\r\n            }\r\n        }\r\n\r\n        console.log(met)\r\n        axios({ method: met, url: baseURL, data: pass })\r\n            .then((res) => {\r\n                console.log(res)\r\n            });\r\n        setInput('')\r\n    }\r\n    let checkCompleted\r\n    if (!props.hide) {\r\n        checkCompleted = <input type=\"checkbox\" checked={Check}   onChange={() => {\r\n            var comp = !Check\r\n            setCheck(comp)\r\n        }} />\r\n    } else {\r\n        checkCompleted = null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{props.idTask}</h1>\r\n            <input type='text' placeholder='Write your task...' value={Input} onChange={(e) => { enter(e.target.value) }} />\r\n            <button onClick={() => { sendTask(Input, props.method, Check) }}>Submit</button>\r\n            {checkCompleted}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskInput","import Tasks from '../components/Tasks'\r\nimport TaskInput from '../components/TaskInput'\r\nimport { useEffect ,useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst baseURL = 'https://task-api-manager-bojan.herokuapp.com/api/v1/tasks'\r\n\r\nconst TaskList = () => {\r\n    const [Data, setData] = useState([])\r\n    useEffect(() => {\r\n        axios.get(baseURL).then((res) => {\r\n            setData(res.data.tasks)\r\n          });\r\n        \r\n    }, [])\r\n    return (\r\n        <div>\r\n            <TaskInput method=\"POST\" hide={true} id={''} />\r\n            {Data ? <Tasks data={Data} /> : 'No tasks yet'}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList","import TaskInput from \"../components/TaskInput\";\r\nimport { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\n\r\nconst TaskSingle = () => {\r\n    const location = useLocation().pathname\r\n    const baseURL = `https://task-api-manager-bojan.herokuapp.com/api/v1/tasks${location}`\r\n    var completed, name, id;\r\n    const [Data, setData] = useState()\r\n    useEffect(() => {\r\n        axios.get(baseURL).then((res) => {\r\n            setData(res.data.task)\r\n        });\r\n\r\n    }, [])\r\n\r\n    var task\r\n    if(Data) {\r\n        completed = Data.completed\r\n        name = Data.name\r\n        id = Data._id\r\n        task = < TaskInput method = \"PATCH\" hide = { false } completed={completed} value = { name } idTask = { id } />\r\n    }else{\r\n        task = null\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <div>\r\n            {task}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskSingle","import Tasks from './containers/Task.list'\nimport SingleTask from './containers/Task.single'\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main>\n            <Switch>\n                <Route path=\"/\" component={Tasks} exact />\n                <Route path=\"/:id\" component={SingleTask} />\n            </Switch>\n        </main>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}